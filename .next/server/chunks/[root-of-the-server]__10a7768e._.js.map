{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 76, "column": 0}, "map": {"version":3,"sources":["file:///E:/frontendApp/frontendApp/src/app/api/todolist/route.ts"],"sourcesContent":["import { NextResponse } from \"next/server\";\r\nimport { promises as fs } from \"fs\";\r\nimport path from \"path\";\r\n\r\n//path file json -> app/json/todolist.json\r\nexport const file = path.join(process.cwd() + \"/src/app/json/todolist.json\")\r\n\r\n// Route CRUD todolist\r\nexport async function GET(request: Request) {\r\n    const {searchParams} = new URL(request.url)\r\n    const kw = searchParams.get(\"kw\") || \"\";\r\n    const raw = await fs.readFile(file,\"utf-8\")\r\n    const data = JSON.parse(raw)\r\n\r\n    let todos = data.todos\r\n    if(kw){\r\n        todos = todos.filter((todo: any) => \r\n            String(todo.todo).toLowerCase().includes(kw.toLowerCase()))\r\n    }\r\n    return NextResponse.json({ todos });\r\n}\r\n\r\nexport async function POST(request: Request) {\r\n    const raw = await fs.readFile(file,\"utf-8\")\r\n    const body = await request.json();\r\n    const data = JSON.parse(raw);\r\n    const newTodo = { ...body, completed: false };\r\n    data.todos.push(newTodo);\r\n    await fs.writeFile(file, JSON.stringify(data, null, 2), \"utf-8\");\r\n    return NextResponse.json(newTodo);\r\n}\r\n\r\nexport async function DELETE(request: Request) {\r\n    const raw = await fs.readFile(file,\"utf-8\")\r\n    const body = await request.json();\r\n    const id = body.id\r\n    const data = JSON.parse(raw)\r\n    data.todos = data.todos.filter((todo: any) => todo.id !== id)\r\n    await fs.writeFile(file, JSON.stringify(data, null, 2), \"utf-8\");\r\n    return NextResponse.json({success : true})\r\n}\r\n"],"names":[],"mappings":";;;;;;AAAA;AACA;AACA;;;;AAGO,MAAM,OAAO,iGAAA,CAAA,UAAI,CAAC,IAAI,CAAC,QAAQ,GAAG,KAAK;AAGvC,eAAe,IAAI,OAAgB;IACtC,MAAM,EAAC,YAAY,EAAC,GAAG,IAAI,IAAI,QAAQ,GAAG;IAC1C,MAAM,KAAK,aAAa,GAAG,CAAC,SAAS;IACrC,MAAM,MAAM,MAAM,6FAAA,CAAA,WAAE,CAAC,QAAQ,CAAC,MAAK;IACnC,MAAM,OAAO,KAAK,KAAK,CAAC;IAExB,IAAI,QAAQ,KAAK,KAAK;IACtB,IAAG,IAAG;QACF,QAAQ,MAAM,MAAM,CAAC,CAAC,OAClB,OAAO,KAAK,IAAI,EAAE,WAAW,GAAG,QAAQ,CAAC,GAAG,WAAW;IAC/D;IACA,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;QAAE;IAAM;AACrC;AAEO,eAAe,KAAK,OAAgB;IACvC,MAAM,MAAM,MAAM,6FAAA,CAAA,WAAE,CAAC,QAAQ,CAAC,MAAK;IACnC,MAAM,OAAO,MAAM,QAAQ,IAAI;IAC/B,MAAM,OAAO,KAAK,KAAK,CAAC;IACxB,MAAM,UAAU;QAAE,GAAG,IAAI;QAAE,WAAW;IAAM;IAC5C,KAAK,KAAK,CAAC,IAAI,CAAC;IAChB,MAAM,6FAAA,CAAA,WAAE,CAAC,SAAS,CAAC,MAAM,KAAK,SAAS,CAAC,MAAM,MAAM,IAAI;IACxD,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;AAC7B;AAEO,eAAe,OAAO,OAAgB;IACzC,MAAM,MAAM,MAAM,6FAAA,CAAA,WAAE,CAAC,QAAQ,CAAC,MAAK;IACnC,MAAM,OAAO,MAAM,QAAQ,IAAI;IAC/B,MAAM,KAAK,KAAK,EAAE;IAClB,MAAM,OAAO,KAAK,KAAK,CAAC;IACxB,KAAK,KAAK,GAAG,KAAK,KAAK,CAAC,MAAM,CAAC,CAAC,OAAc,KAAK,EAAE,KAAK;IAC1D,MAAM,6FAAA,CAAA,WAAE,CAAC,SAAS,CAAC,MAAM,KAAK,SAAS,CAAC,MAAM,MAAM,IAAI;IACxD,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;QAAC,SAAU;IAAI;AAC5C","debugId":null}}]
}