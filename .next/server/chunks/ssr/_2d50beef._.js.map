{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 30, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Toby/app/my-app/src/app/blog/%5Bslug%5D/page.tsx"],"sourcesContent":["import React from 'react'\r\nimport ReactDOM from 'react-dom/client'\r\nimport {\r\n  QueryClient,\r\n  QueryClientProvider,\r\n  useQuery,\r\n} from '@tanstack/react-query'\r\nimport { ReactQueryDevtools } from '@tanstack/react-query-devtools'\r\n\r\nconst queryClient = new QueryClient()\r\n\r\nexport default function App() {\r\n  return (\r\n    <QueryClientProvider client={queryClient}>\r\n      <ReactQueryDevtools />\r\n      <Example />\r\n    </QueryClientProvider>\r\n  )\r\n}\r\n\r\nfunction Example() {\r\n  const { isPending, error, data, isFetching } = useQuery({\r\n    queryKey: ['repoData'],\r\n    queryFn: async () => {\r\n      const response = await fetch(\r\n        'https://api.github.com/repos/TanStack/query',\r\n      )\r\n      return await response.json()\r\n    },\r\n  })\r\n\r\n  if (isPending) return 'Loading...'\r\n\r\n  if (error) return 'An error has occurred: ' + error.message\r\n\r\n  return (\r\n    <div>\r\n      <h1>{data.full_name}</h1>\r\n      <p>{data.description}</p>\r\n      <strong>üëÄ {data.subscribers_count}</strong>{' '}\r\n      <strong>‚ú® {data.stargazers_count}</strong>{' '}\r\n      <strong>üç¥ {data.forks_count}</strong>\r\n      <div>{isFetching ? 'Updating...' : ''}</div>\r\n    </div>\r\n  )\r\n}\r\n\r\nconst rootElement = document.getElementById('root') as HTMLElement\r\nReactDOM.createRoot(rootElement).render(<App />)"],"names":[],"mappings":";;;;AACA;AACA;AAAA;AAAA;AAKA;;;;;AAEA,MAAM,cAAc,IAAI,6KAAA,CAAA,cAAW;AAEpB,SAAS;IACtB,qBACE,8OAAC,sLAAA,CAAA,sBAAmB;QAAC,QAAQ;;0BAC3B,8OAAC,oLAAA,CAAA,qBAAkB;;;;;0BACnB,8OAAC;;;;;;;;;;;AAGP;AAEA,SAAS;IACP,MAAM,EAAE,SAAS,EAAE,KAAK,EAAE,IAAI,EAAE,UAAU,EAAE,GAAG,CAAA,GAAA,2KAAA,CAAA,WAAQ,AAAD,EAAE;QACtD,UAAU;YAAC;SAAW;QACtB,SAAS;YACP,MAAM,WAAW,MAAM,MACrB;YAEF,OAAO,MAAM,SAAS,IAAI;QAC5B;IACF;IAEA,IAAI,WAAW,OAAO;IAEtB,IAAI,OAAO,OAAO,4BAA4B,MAAM,OAAO;IAE3D,qBACE,8OAAC;;0BACC,8OAAC;0BAAI,KAAK,SAAS;;;;;;0BACnB,8OAAC;0BAAG,KAAK,WAAW;;;;;;0BACpB,8OAAC;;oBAAO;oBAAI,KAAK,iBAAiB;;;;;;;YAAW;0BAC7C,8OAAC;;oBAAO;oBAAG,KAAK,gBAAgB;;;;;;;YAAW;0BAC3C,8OAAC;;oBAAO;oBAAI,KAAK,WAAW;;;;;;;0BAC5B,8OAAC;0BAAK,aAAa,gBAAgB;;;;;;;;;;;;AAGzC;AAEA,MAAM,cAAc,SAAS,cAAc,CAAC;AAC5C,kKAAA,CAAA,UAAQ,CAAC,UAAU,CAAC,aAAa,MAAM,eAAC,8OAAC","debugId":null}}]
}