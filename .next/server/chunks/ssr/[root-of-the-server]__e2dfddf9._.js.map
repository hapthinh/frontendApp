{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 15, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Toby/app/my-app/src/app/features/todos/TodoSlice.tsx"],"sourcesContent":["import { createSlice, PayloadAction } from \"@reduxjs/toolkit\"\r\n\r\nexport type Todo = {\r\n    id : number,\r\n    todo : string, \r\n    completed : boolean,\r\n}\r\n\r\nexport type Todos = {\r\n    todos: Todo[],\r\n    total : number,\r\n    skip: number,\r\n    limit: number\r\n}\r\n\r\nexport interface TodoState {\r\n    items : Todo[]\r\n}\r\n\r\nconst initState : TodoState = {\r\n    items: []\r\n}\r\n\r\nvar idTodo = 0;\r\nconst TodoSlice = createSlice ({\r\n    name: 'todoSlice',\r\n    initialState : initState,\r\n    reducers : {\r\n        addTodo: (state, action: PayloadAction<string>) => {\r\n            state.items.push({\r\n                id: ++idTodo,\r\n                todo : action.payload,\r\n                completed: false,\r\n            })\r\n        },\r\n        removeTodo: (state, action: PayloadAction<number>) => {\r\n            state.items = state.items.filter((todo) => todo.id !== action.payload)\r\n        },        \r\n    }\r\n})\r\n\r\nexport const {addTodo, removeTodo} = TodoSlice.actions\r\nexport const todoReducer = TodoSlice.reducer"],"names":[],"mappings":";;;;;AAAA;;AAmBA,MAAM,YAAwB;IAC1B,OAAO,EAAE;AACb;AAEA,IAAI,SAAS;AACb,MAAM,YAAY,CAAA,GAAA,2LAAA,CAAA,cAAW,AAAD,EAAG;IAC3B,MAAM;IACN,cAAe;IACf,UAAW;QACP,SAAS,CAAC,OAAO;YACb,MAAM,KAAK,CAAC,IAAI,CAAC;gBACb,IAAI,EAAE;gBACN,MAAO,OAAO,OAAO;gBACrB,WAAW;YACf;QACJ;QACA,YAAY,CAAC,OAAO;YAChB,MAAM,KAAK,GAAG,MAAM,KAAK,CAAC,MAAM,CAAC,CAAC,OAAS,KAAK,EAAE,KAAK,OAAO,OAAO;QACzE;IACJ;AACJ;AAEO,MAAM,EAAC,OAAO,EAAE,UAAU,EAAC,GAAG,UAAU,OAAO;AAC/C,MAAM,cAAc,UAAU,OAAO","debugId":null}},
    {"offset": {"line": 50, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Toby/app/my-app/src/app/lib/store.ts"],"sourcesContent":["import { configureStore } from \"@reduxjs/toolkit\";\r\nimport { todoReducer } from \"app/features/todos/TodoSlice\";\r\nimport { TypedUseSelectorHook, useDispatch, useSelector } from \"react-redux\";\r\n\r\nexport const store = configureStore({\r\n    reducer: {\r\n        todos : todoReducer,\r\n    }\r\n})\r\n\r\nexport type RootState = ReturnType<typeof store.getState>\r\nexport type AppDispatch = typeof store.dispatch\r\n\r\nexport const useAppDispatch = () => useDispatch<AppDispatch>()\r\nexport const useAppSelector: TypedUseSelectorHook<RootState> = useSelector;"],"names":[],"mappings":";;;;;AAAA;AACA;AACA;;;;AAEO,MAAM,QAAQ,CAAA,GAAA,2LAAA,CAAA,iBAAc,AAAD,EAAE;IAChC,SAAS;QACL,OAAQ,6IAAA,CAAA,cAAW;IACvB;AACJ;AAKO,MAAM,iBAAiB,IAAM,CAAA,GAAA,yJAAA,CAAA,cAAW,AAAD;AACvC,MAAM,iBAAkD,yJAAA,CAAA,cAAW","debugId":null}},
    {"offset": {"line": 74, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Toby/app/my-app/src/app/provider/provider.tsx"],"sourcesContent":["'use client'\r\n\r\nimport { store } from \"app/lib/store\";\r\nimport { ReactNode } from \"react\";\r\nimport { Provider } from \"react-redux\";\r\n\r\nexport default function Providers({children}: {children : ReactNode}){\r\n    return (\r\n        <Provider store={store}>{children}</Provider>\r\n    )\r\n}"],"names":[],"mappings":";;;;AAEA;AAEA;AAJA;;;;AAMe,SAAS,UAAU,EAAC,QAAQ,EAAyB;IAChE,qBACI,8OAAC,yJAAA,CAAA,WAAQ;QAAC,OAAO,0HAAA,CAAA,QAAK;kBAAG;;;;;;AAEjC","debugId":null}}]
}