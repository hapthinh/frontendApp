{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Toby/app/my-app/src/app/hooks/hooks.ts"],"sourcesContent":["import { useDispatch, useSelector } from \"react-redux\";\r\nimport type { AppDispatch,RootState } from \"app/lib/store\";\r\n\r\nexport const useAppDispatch = useDispatch.withTypes<AppDispatch>()\r\nexport const useAppSelector = useSelector.withTypes<RootState>()"],"names":[],"mappings":";;;;AAAA;;AAGO,MAAM,iBAAiB,4JAAA,CAAA,cAAW,CAAC,SAAS;AAC5C,MAAM,iBAAiB,4JAAA,CAAA,cAAW,CAAC,SAAS","debugId":null}},
    {"offset": {"line": 24, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Toby/app/my-app/src/app/lib/api.ts"],"sourcesContent":["export async function fetchTodo() {\r\n    const res = await fetch('https://dummyjson.com/todos')\r\n    if(!res.ok) return \"Fetch Failed\"\r\n    return res.json\r\n}"],"names":[],"mappings":";;;AAAO,eAAe;IAClB,MAAM,MAAM,MAAM,MAAM;IACxB,IAAG,CAAC,IAAI,EAAE,EAAE,OAAO;IACnB,OAAO,IAAI,IAAI;AACnB","debugId":null}},
    {"offset": {"line": 41, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Toby/app/my-app/src/app/features/todos/TodoSlice.tsx"],"sourcesContent":["import { createSlice, PayloadAction } from \"@reduxjs/toolkit\"\r\nimport { fetchTodo } from \"app/lib/api\"\r\n\r\nexport type Todo = {\r\n    id : Number,\r\n    todo : string, \r\n    completed : boolean,\r\n}\r\n\r\nexport type Todos = {\r\n    todos: Todo[],\r\n    total : Number,\r\n    skip: Number,\r\n    limit: Number\r\n}\r\n\r\nexport interface TodoState {\r\n    items : Todo[]\r\n}\r\n\r\nconst initState : TodoState = {\r\n    items: []\r\n}\r\n\r\nexport function getTodo() { return fetchTodo() }\r\n\r\nconst TodoSlice = createSlice ({\r\n    name: 'todoReducer',\r\n    initialState : initState,\r\n    reducers : {\r\n        addTodo: (state, action: PayloadAction<string>) => {\r\n            state.items.push({\r\n                id: Date.now(),\r\n                todo : action.payload,\r\n                completed: true,\r\n            })\r\n        }\r\n    }\r\n})\r\n\r\nexport const {addTodo} = TodoSlice.actions\r\nexport default TodoSlice.reducer"],"names":[],"mappings":";;;;;AAAA;AACA;;;AAmBA,MAAM,YAAwB;IAC1B,OAAO,EAAE;AACb;AAEO,SAAS;IAAY,OAAO,CAAA,GAAA,2HAAA,CAAA,YAAS,AAAD;AAAI;AAE/C,MAAM,YAAY,CAAA,GAAA,8LAAA,CAAA,cAAW,AAAD,EAAG;IAC3B,MAAM;IACN,cAAe;IACf,UAAW;QACP,SAAS,CAAC,OAAO;YACb,MAAM,KAAK,CAAC,IAAI,CAAC;gBACb,IAAI,KAAK,GAAG;gBACZ,MAAO,OAAO,OAAO;gBACrB,WAAW;YACf;QACJ;IACJ;AACJ;AAEO,MAAM,EAAC,OAAO,EAAC,GAAG,UAAU,OAAO;uCAC3B,UAAU,OAAO","debugId":null}},
    {"offset": {"line": 80, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Toby/app/my-app/src/app/components/TodoList.tsx"],"sourcesContent":["'use client'\r\n\r\nimport { TodoState } from \"app/features/todos/TodoSlice\"\r\nimport { useAppDispatch } from \"app/hooks/hooks\"\r\nimport { getTodo } from \"app/features/todos/TodoSlice\"\r\nimport { useEffect } from \"react\"\r\nimport { useSelector } from \"react-redux\"\r\nimport { RootState } from \"app/lib/store\"\r\n\r\nexport default function TodoList(){\r\n    const todos = useSelector((state: RootState) => state.todos.props)\r\n    const dispatch = useAppDispatch()\r\n\r\n    useEffect(() => { \r\n        dispatch(getTodo() as any); \r\n    }, [dispatch])\r\n    return(\r\n    <ul >\r\n        {todos.map((todo: {id : number, todo: string}) => (\r\n            <li key={String(todo.id)}>\r\n                {todo.todo}\r\n            </li>\r\n        ))}\r\n    </ul>\r\n    )\r\n}"],"names":[],"mappings":";;;;AAGA;AACA;AACA;AACA;;;AANA;;;;;AASe,SAAS;;IACpB,MAAM,QAAQ,CAAA,GAAA,4JAAA,CAAA,cAAW,AAAD;uCAAE,CAAC,QAAqB,MAAM,KAAK,CAAC,KAAK;;IACjE,MAAM,WAAW,CAAA,GAAA,+HAAA,CAAA,iBAAc,AAAD;IAE9B,CAAA,GAAA,6JAAA,CAAA,YAAS,AAAD;8BAAE;YACN,SAAS,CAAA,GAAA,gJAAA,CAAA,UAAO,AAAD;QACnB;6BAAG;QAAC;KAAS;IACb,qBACA,6LAAC;kBACI,MAAM,GAAG,CAAC,CAAC,qBACR,6LAAC;0BACI,KAAK,IAAI;eADL,OAAO,KAAK,EAAE;;;;;;;;;;AAMnC;GAhBwB;;QACN,4JAAA,CAAA,cAAW;QACR,+HAAA,CAAA,iBAAc;;;KAFX","debugId":null}},
    {"offset": {"line": 140, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Toby/app/my-app/src/app/lib/store.ts"],"sourcesContent":["import { configureStore } from \"@reduxjs/toolkit\";\r\nimport TodoList from \"app/components/TodoList\";\r\n\r\n\r\nexport const store = configureStore({\r\n    reducer: {\r\n        todos : TodoList,\r\n    }\r\n})\r\n\r\nexport type RootState = ReturnType<typeof store.getState>\r\nexport type AppDispatch = typeof store.dispatch"],"names":[],"mappings":";;;AAAA;AACA;;;AAGO,MAAM,QAAQ,CAAA,GAAA,8LAAA,CAAA,iBAAc,AAAD,EAAE;IAChC,SAAS;QACL,OAAQ,wIAAA,CAAA,UAAQ;IACpB;AACJ","debugId":null}},
    {"offset": {"line": 161, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Toby/app/my-app/src/app/provider/provider.tsx"],"sourcesContent":["'use client'\r\n\r\nimport { store } from \"app/lib/store\";\r\nimport { ReactNode } from \"react\";\r\nimport { Provider } from \"react-redux\";\r\n\r\n\r\nexport default function Providers({children}: {children : ReactNode}){\r\n    return (\r\n        <Provider store={store}>{children}</Provider>\r\n    )\r\n}"],"names":[],"mappings":";;;;AAEA;AAEA;AAJA;;;;AAOe,SAAS,UAAU,EAAC,QAAQ,EAAyB;IAChE,qBACI,6LAAC,4JAAA,CAAA,WAAQ;QAAC,OAAO,6HAAA,CAAA,QAAK;kBAAG;;;;;;AAEjC;KAJwB","debugId":null}}]
}