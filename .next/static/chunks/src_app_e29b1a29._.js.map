{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Toby/app/my-app/src/app/lib/api.ts"],"sourcesContent":["\r\n\r\nexport async function getTodo(): Promise<any> {\r\n    const res = await fetch('http://localhost:3000/api/todolist', { cache: \"no-store\" });\r\n    return res.json();\r\n}\r\n\r\nexport async function postTodo({id, todo}: {id: any, todo: any}): Promise<any> {\r\n    const res = await fetch ('http://localhost:3000/api/todolist', {\r\n        method : 'POST',\r\n        headers : { 'Content-type': 'application/json'},\r\n        body : JSON.stringify({\r\n            id : id, \r\n            todo : todo\r\n        })\r\n    })\r\n    return res.json()\r\n}\r\n\r\nexport async function getTodoById(id: Number): Promise<any> {\r\n    const res = await fetch(`http://localhost:3000/api/todolist/${id}`, { cache: \"no-store\" });\r\n    return res.json();\r\n}\r\n\r\nexport async function getIsDone() {\r\n    const res = await fetch('http://localhost:3000/api/todolist')\r\n}"],"names":[],"mappings":";;;;;;AAEO,eAAe;IAClB,MAAM,MAAM,MAAM,MAAM,sCAAsC;QAAE,OAAO;IAAW;IAClF,OAAO,IAAI,IAAI;AACnB;AAEO,eAAe,SAAS,EAAC,EAAE,EAAE,IAAI,EAAuB;IAC3D,MAAM,MAAM,MAAM,MAAO,sCAAsC;QAC3D,QAAS;QACT,SAAU;YAAE,gBAAgB;QAAkB;QAC9C,MAAO,KAAK,SAAS,CAAC;YAClB,IAAK;YACL,MAAO;QACX;IACJ;IACA,OAAO,IAAI,IAAI;AACnB;AAEO,eAAe,YAAY,EAAU;IACxC,MAAM,MAAM,MAAM,MAAM,CAAC,mCAAmC,EAAE,IAAI,EAAE;QAAE,OAAO;IAAW;IACxF,OAAO,IAAI,IAAI;AACnB;AAEO,eAAe;IAClB,MAAM,MAAM,MAAM,MAAM;AAC5B","debugId":null}},
    {"offset": {"line": 50, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Toby/app/my-app/src/app/components/TodoItem.tsx"],"sourcesContent":["'use client'\r\n\r\nimport { useQuery } from \"@tanstack/react-query\"\r\nimport { getTodoById } from \"app/lib/api\"\r\n\r\nexport default function TodoItem({todoId}: {todoId : Number}){\r\n    const query = useQuery({queryKey: ['todos',todoId], queryFn:() => getTodoById(todoId)})\r\n\r\n    return (\r\n        <div>\r\n            {query.data}\r\n        </div>\r\n    )\r\n}"],"names":[],"mappings":";;;;AAEA;AACA;;;AAHA;;;AAKe,SAAS,SAAS,EAAC,MAAM,EAAoB;;IACxD,MAAM,QAAQ,CAAA,GAAA,8KAAA,CAAA,WAAQ,AAAD,EAAE;QAAC,UAAU;YAAC;YAAQ;SAAO;QAAE,OAAO;wCAAC,IAAM,CAAA,GAAA,2HAAA,CAAA,cAAW,AAAD,EAAE;;IAAO;IAErF,qBACI,6LAAC;kBACI,MAAM,IAAI;;;;;;AAGvB;GARwB;;QACN,8KAAA,CAAA,WAAQ;;;KADF","debugId":null}},
    {"offset": {"line": 97, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Toby/app/my-app/src/app/todo/%5Bid%5D/page.tsx"],"sourcesContent":["'use client'\r\n\r\nimport TodoItem from \"app/components/TodoItem\";\r\nimport { QueryClient, QueryClientProvider } from \"@tanstack/react-query\";\r\nimport { useRef } from \"react\";\r\n\r\nexport default function TodoDetailPage({ params }: { params: { id: string } }) {\r\n  const todoId = Number(params.id);\r\n  const queryClientRef = useRef<null | QueryClient>(null);\r\n  if (!queryClientRef.current) {\r\n    queryClientRef.current = new QueryClient();\r\n  }\r\n  return (\r\n    <QueryClientProvider client={queryClientRef.current}>\r\n      <TodoItem todoId={todoId} />\r\n    </QueryClientProvider>\r\n  );\r\n}"],"names":[],"mappings":";;;;AAEA;AACA;AAAA;AACA;;;AAJA;;;;AAMe,SAAS,eAAe,EAAE,MAAM,EAA8B;;IAC3E,MAAM,SAAS,OAAO,OAAO,EAAE;IAC/B,MAAM,iBAAiB,CAAA,GAAA,6JAAA,CAAA,SAAM,AAAD,EAAsB;IAClD,IAAI,CAAC,eAAe,OAAO,EAAE;QAC3B,eAAe,OAAO,GAAG,IAAI,gLAAA,CAAA,cAAW;IAC1C;IACA,qBACE,6LAAC,yLAAA,CAAA,sBAAmB;QAAC,QAAQ,eAAe,OAAO;kBACjD,cAAA,6LAAC,wIAAA,CAAA,UAAQ;YAAC,QAAQ;;;;;;;;;;;AAGxB;GAXwB;KAAA","debugId":null}}]
}